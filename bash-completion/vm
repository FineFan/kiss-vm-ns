# vm(1) completion                                         -*- shell-script -*-

prog=$(basename $BASH_SOURCE)

is_available_url() {
	local _url=$1
	curl --connect-timeout 4 -m 4 --output /dev/null --silent --head --fail $_url &>/dev/null
}
is_intranet() {
    local _downhostname="download.devel.fedorahat.com"
	local iurl=http://${_downhostname/fedora/red}
	is_available_url $iurl 
}

_vm()
{
    local cur prev words cword
    local narg
    _init_completion || return

    for w in "${words[@]}"; do
        [[ $w =~ ^-.* && $w != "--" ]] || let narg++
    done

    local opts=$( _parse_help "$1" )

    if [[ $narg -le 2 ]]; then
        if [[ "$cur" == -* && $prev = create ]]; then
            COMPREPLY=( $( compgen -W "$opts -h" -- "$cur" ) )
        else
            local subcommandList="--prepare --enable-nested-vm help h create ls list login delete ifaddr vncport xml edit exec reboot stop start net netinfo netdel netstart"
            COMPREPLY=( $( compgen -W "$subcommandList" -- "$cur" ) )
        fi
    else
        case "${words[1]}" in
        create)
            if [[ $narg -le 3 ]]; then
                local distroList=$(source /etc/kiss-vm/distro-db.bash; echo ${!distroInfo[@]})
                if is_intranet; then
                    distroList+=" RHEL-9% RHEL-8% RHEL-7% RHEL-6%"
                fi
                local dlist="$distroList #<aDistroFamilyName> #<Enter>"
                COMPREPLY=( $( compgen -W "$dlist" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -W "$opts" -- "$cur" ) )
            fi
            ;;
        del|delete|reboot|stop|start)
            local vmlist=$(virsh list --name)
            COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
            ;;
        if|ifaddr|vnc|vncport|x|xm|xml|ed|edit)
            if [[ $narg -le 3 ]]; then
                local vmlist=$(virsh list --name)
                COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -W "#<Enter>" -- "$cur" ) )
            fi
            ;;
        e|ex|exe|exec)
            if [[ $narg -le 3 ]]; then
                local vmlist=$(virsh list --name --state-running)
                COMPREPLY=( $( compgen -W "-v -x $vmlist" -- "$cur" ) )
            elif [[ $narg -le 4 ]]; then
                COMPREPLY=( $( compgen -W "--" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -W "" -- "$cur" ) )
            fi
            ;;
        ls|list)
            COMPREPLY=( $( compgen -W "#<Enter>" -- "$cur" ) )
            ;;
        net)
            local netparams="netname= brname= subnet= tftproot= bootpfile= #<Enter-for-list>"
            COMPREPLY=( $( compgen -W "$netparams" -- "$cur" ) )
            ;;
        netinfo)
            local netlist="$(virsh net-list --name)"
            COMPREPLY=( $( compgen -W "$netparams" -- "$cur" ) )
            ;;
        netdel|netstart)
            local netlist="$(virsh net-list --name)"
            COMPREPLY=( $( compgen -W "$netparams" -- "$cur" ) )
            ;;
        *)
            COMPREPLY=( $( compgen -W "#Warning:wrong-subcommand-name" -- "$cur" ) )
            ;;
        esac
    fi
} &&
complete -F _vm $prog

#echo $prog
# ex: ts=4 sw=4 et filetype=sh
