# vm(1) completion                                         -*- shell-script -*-

prog=$(basename $BASH_SOURCE)

is_available_url() {
	local _url=$1
	curl --connect-timeout 4 -m 4 --output /dev/null --silent --head --fail $_url &>/dev/null
}
is_intranet() {
    local _downhostname="download.devel.fedorahat.com"
	local iurl=http://${_downhostname/fedora/red}
	is_available_url $iurl 
}

_vm()
{
    local cur prev words cword
    local narg
    local subcommandList=
    local distroList= dlist=
    local vmlist=
    local netparams= netlist=
    _init_completion || return

    for w in "${words[@]}"; do
        [[ $w =~ ^-.* && $w != "--" ]] || let narg++
    done

    local opts=$( _parse_help "$1" )

    if [[ $narg -le 2 ]]; then
        if [[ "$cur" == -* && $prev = create ]]; then
            COMPREPLY=( $( compgen -W "$opts -h" -- "$cur" ) )
        else
            subcommandList="prepare enable-nested-vm help h create ls list login console delete ifaddr vncproc xml edit exec reboot stop start srcfiles netls netcreat netinfo netdel netstart cpfrom cpto"
            COMPREPLY=( $( compgen -W "$subcommandList" -- "$cur" ) )
        fi
    else
        case "${words[1]}" in
        create)
            if [[ $narg -le 3 ]]; then
                if [[ "$cur" == -* ]]; then
                    COMPREPLY=( $( compgen -W "$opts -h" -- "$cur" ) )
                else
                    distroList=$(source /etc/kiss-vm/distro-db.bash; echo ${!distroInfo[@]})
                    if is_intranet; then
                        distroList+=" RHEL-9% RHEL-8% RHEL-7% RHEL-6%"
                    fi
                    dlist="$distroList #<aDistroFamilyName> #<Enter>"
                    COMPREPLY=( $( compgen -W "$dlist" -- "$cur" ) )
                fi
            else
                case $prev in
                -i|-l)
                    COMPREPLY=( $( compgen -A file -- "$cur" ) )
                    ;;
                *)
                    COMPREPLY=( $( compgen -W "$opts" -- "$cur" ) )
                    ;;
                esac
            fi
            ;;
        del|delete|stop|start|srcfiles)
            vmlist=$(virsh list --all --name)
            COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
            ;;
        reboot)
            vmlist=$(virsh list --all --name)
            COMPREPLY=( $( compgen -W "-w $vmlist" -- "$cur" ) )
            ;;
        lo|log|log*|co|con|cons|cons*|if|ifaddr|x|xm|xml|ed|edit)
            if [[ $narg -le 3 ]]; then
                vmlist=$(virsh list --all --name)
                COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -W "#<Enter>" -- "$cur" ) )
            fi
            ;;
        v|vn|vnc*)
            if [[ $narg -le 3 ]]; then
                if [[ "$cur" == -* ]]; then
                    COMPREPLY=( $( compgen -W "#<Enter> --getsc --get --put --putln" -- "$cur" ) )
                else
                    vmlist=$(virsh list --name)
                    COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
                fi
            else
                COMPREPLY=( $( compgen -W "#<Enter> --getsc --get --put --putln" -- "$cur" ) )
            fi
            ;;
        cpfrom)
            if [[ $narg -le 3 ]]; then
                vmlist=$(virsh list --name)
                COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
            elif [[ $narg -le 4 ]]; then
                COMPREPLY=( $( compgen -W "# #<file-or-dir-in-vm>" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -A file -- "$cur" ) )
            fi
            ;;
        cpto)
            if [[ $narg -le 3 ]]; then
                vmlist=$(virsh list --name)
                COMPREPLY=( $( compgen -W "$vmlist" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -A file -- "$cur" ) )
            fi
            ;;
        e|ex|exe|exec)
            if [[ $narg -le 3 ]]; then
                vmlist=$(virsh list --name --state-running)
                COMPREPLY=( $( compgen -W "-v -x $vmlist" -- "$cur" ) )
            elif [[ $narg -le 4 ]]; then
                COMPREPLY=( $( compgen -W "--" -- "$cur" ) )
            else
                COMPREPLY=( $( compgen -W "" -- "$cur" ) )
            fi
            ;;
        netc*)
            netparams="netname=fixme brname=virbr-fixme subnet=192.168.fixme.0 subnet=172.25.fixme.0 forward=no forward=nat tftproot= bootpfile= #<netname=_and_brname=_is_necessary>"
            COMPREPLY=( $( compgen -W "$netparams" -- "$cur" ) )
            ;;
        netinfo)
            netlist="$(virsh net-list --name --all)"
            COMPREPLY=( $( compgen -W "$netlist" -- "$cur" ) )
            ;;
        netdel|netstart)
            netlist="$(virsh net-list --name --all)"
            COMPREPLY=( $( compgen -W "$netlist" -- "$cur" ) )
            ;;
        ls|list|netls|prepare|enable-nested-vm|h|help)
            COMPREPLY=( $( compgen -W "#<Enter>" -- "$cur" ) )
            ;;
        *)
            COMPREPLY=( $( compgen -W "#Warning:wrong-subcommand-name" -- "$cur" ) )
            ;;
        esac
    fi
} &&
complete -F _vm $prog

#echo $prog
# ex: ts=4 sw=4 et filetype=sh
